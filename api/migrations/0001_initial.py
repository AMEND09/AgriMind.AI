# Generated by Django 5.0.6 on 2025-05-21 02:14

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='CropPlanEvent',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('date', models.DateField()),
            ],
            options={
                'db_table': 'crop_plan_events',
            },
        ),
        migrations.CreateModel(
            name='Farm',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('size', models.CharField(max_length=50)),
                ('crop', models.CharField(max_length=100)),
                ('soil_type', models.CharField(blank=True, max_length=50)),
                ('slope_ratio', models.FloatField(blank=True, null=True)),
            ],
            options={
                'db_table': 'farms',
            },
        ),
        migrations.CreateModel(
            name='Issue',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('status', models.CharField(max_length=50)),
            ],
            options={
                'db_table': 'issues',
            },
        ),
        migrations.CreateModel(
            name='PlanItem',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_type', models.CharField(max_length=50)),
                ('description', models.TextField(blank=True)),
            ],
            options={
                'db_table': 'plan_items',
            },
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=200)),
                ('due_date', models.DateField()),
                ('priority', models.CharField(max_length=20)),
                ('completed', models.BooleanField(default=False)),
            ],
            options={
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='EnergyRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('energy_type', models.CharField(max_length=50)),
                ('amount', models.FloatField()),
                ('unit', models.CharField(max_length=20)),
                ('renewable', models.BooleanField(default=False)),
                ('cost', models.FloatField()),
                ('purpose', models.CharField(max_length=100)),
                ('notes', models.TextField(blank=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='energy_records', to='api.farm')),
            ],
            options={
                'db_table': 'energy_records',
            },
        ),
        migrations.CreateModel(
            name='EmissionSource',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('source_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('co2_equivalent', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='emission_sources', to='api.farm')),
            ],
            options={
                'db_table': 'emission_sources',
            },
        ),
        migrations.CreateModel(
            name='FertilizerHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(max_length=50)),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fertilizer_history', to='api.farm')),
            ],
            options={
                'db_table': 'fertilizer_history',
            },
        ),
        migrations.CreateModel(
            name='FuelRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('equipment_name', models.CharField(max_length=100)),
                ('fuel_type', models.CharField(max_length=50)),
                ('gallons', models.FloatField()),
                ('hours_operated', models.FloatField()),
                ('cost', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='fuel_records', to='api.farm')),
            ],
            options={
                'db_table': 'fuel_records',
            },
        ),
        migrations.CreateModel(
            name='HarvestHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('yield_amount', models.IntegerField()),
                ('date', models.DateField()),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='harvest_history', to='api.farm')),
            ],
            options={
                'db_table': 'harvest_history',
            },
        ),
        migrations.CreateModel(
            name='Livestock',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('type', models.CharField(max_length=50)),
                ('count', models.IntegerField()),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livestock', to='api.farm')),
            ],
            options={
                'db_table': 'livestock',
            },
        ),
        migrations.CreateModel(
            name='SequestrationActivity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('activity_type', models.CharField(max_length=100)),
                ('description', models.TextField(blank=True)),
                ('co2_sequestered', models.FloatField()),
                ('area', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sequestration_activities', to='api.farm')),
            ],
            options={
                'db_table': 'sequestration_activities',
            },
        ),
        migrations.CreateModel(
            name='SoilRecord',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('date', models.DateField()),
                ('location', models.CharField(max_length=100)),
                ('ph', models.FloatField()),
                ('organic_matter', models.FloatField()),
                ('nitrogen', models.FloatField()),
                ('phosphorus', models.FloatField()),
                ('potassium', models.FloatField()),
                ('moisture', models.FloatField()),
                ('notes', models.TextField(blank=True)),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='soil_records', to='api.farm')),
            ],
            options={
                'db_table': 'soil_records',
            },
        ),
        migrations.CreateModel(
            name='WaterHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField()),
                ('date', models.DateField()),
                ('efficiency', models.IntegerField()),
                ('farm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='water_history', to='api.farm')),
            ],
            options={
                'db_table': 'water_history',
            },
        ),
    ]
